/* Generated by the Nim Compiler v2.0.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\Users\\Scien\\AppData\\Local\\Microsoft\\WinGet\\Packages\\nim.nim_Microsoft.Winget.Source_8wekyb3d8bbwe\\nim-2.0.8\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 633;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}
var F = {procname: "module test_nim", prev: framePtr, filename: "C:\\Users\\Scien\\python.vscode\\3d-game-platform\\test_nim.nim", line: 0};
framePtr = F;
F.line = 1;
F.filename = "test_nim.nim";
rawEcho([240,159,154,128,32,78,105,109,32,84,101,115,116]);
F.line = 2;
rawEcho([86,101,114,115,105,111,110,58,32,78,105,109,32,50,46,48,46,56]);
F.line = 3;
rawEcho([80,108,97,116,102,111,114,109,58,32], [106,115]);
F.line = 4;
rawEcho([67,80,85,58,32], [106,115]);
F.line = 5;
rawEcho([226,156,133,32,78,105,109,32,105,115,32,119,111,114,107,105,110,103,32,112,101,114,102,101,99,116,108,121,33]);
framePtr = F.prev;
var F = {procname: "module test_nim", prev: framePtr, filename: "C:\\Users\\Scien\\python.vscode\\3d-game-platform\\test_nim.nim", line: 0};
framePtr = F;
framePtr = F.prev;
